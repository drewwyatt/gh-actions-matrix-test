name: test
on: push

env:
  WORKING_DIR: test-thing-wow

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: |
        echo "::set-output name=matrix::{\"include\":[\
          {\
            \"project\":\"foo\",\
            \"config\":\"Debug\",\
            \"env\": { \"SOME_KEY\": \"${{ secrets.SOME_KEY }}\" },\
          },\
          {\
            \"project\":\"bar\",\
            \"config\":\"Release\",\
            \"env\": { \"SOME_KEY\": \"a different secret key\" },\
          }\
        ]}"
    - name: Create workspace
      run: |
        mkdir ${{env.WORKING_DIR}}
        ${{format('find . -name "{0}" -prune | tar -cf - -T - | zstd -T0 - -o {0}.tar.zst', env.WORKING_DIR)}}
    - name: Upload workspace
      uses: actions/upload-artifact@v2
      with:
        if-no-files-found: error
        name: ${{format('{0}.tar.zst', env.WORKING_DIR)}}
        path: ${{format('{0}.tar.zst', env.WORKING_DIR)}}
        retention-days: 1
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.job1.outputs.matrix)}}
    steps:
      - name: Make file
        run: echo ${{matrix.config}} > ${{matrix.project}}
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: ${{matrix.project}}
          path: ${{matrix.project}}
          retention-days: 1
  job4:
    name: Run test.js
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.job1.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - run: node ./test.js
        env: ${{ matrix.env }}

  job3:
    needs: [job1, job2]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1 # do this one at a time to avoid race conditions
      matrix: ${{fromJSON(needs.job1.outputs.matrix)}}
    steps:
      - name: Download workspace
        uses: actions/download-artifact@v2
        with:
          name: ${{format('{0}.tar.zst', env.WORKING_DIR)}}
      - name: 'DEBUG: List ROOT'
        run: ls -la
      - name: Unzip working dir
        run: |
          ${{format('unzstd -T0 {0}.tar.zst --stdout | tar -xf -', env.WORKING_DIR)}}
          ${{format('rm {0}.tar.zst', env.WORKING_DIR)}}
      - name: 'DEBUG: List ROOT'
        run: ls -la
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{matrix.project}}
          path: ${{env.WORKING_DIR}}
      - name: 'DEBUG: List WORKING_DIR'
        run: ls -la
        working-directory: ${{env.WORKING_DIR}}
      - name: Rezip workspace
        run: ${{format('find . -name "{0}" -prune | tar -cf - -T - | zstd -T0 - -o {0}.tar.zst', env.WORKING_DIR)}}
      - name: Reupload workspace
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: ${{format('{0}.tar.zst', env.WORKING_DIR)}}
          path: ${{format('{0}.tar.zst', env.WORKING_DIR)}}
          retention-days: 1

